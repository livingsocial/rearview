# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /verify/:assertion             rearview.controller.MainController.verify(assertion)
GET     /adduser                       rearview.controller.MainController.adduser
GET     /adduser/:email/:first/:last   rearview.controller.MainController.addNewUser(email, first, last)

# Auth hooks
GET     /unauthorized                  rearview.controller.MainController.unauthorized
GET     /unauthorized/logout           rearview.controller.MainController.unauthorized

# General routes
GET     /                              rearview.controller.MainController.index
GET     /user                          rearview.controller.MainController.user
GET     /test                          rearview.controller.MainController.test

POST    /monitor                       rearview.controller.MonitorController.monitor

# Graphite proxy controller
GET     /graphite/*path                rearview.controller.GraphiteController.graphite(path)

# Application routes
GET     /applications                  rearview.controller.ApplicationsController.list
GET     /applications/:id              rearview.controller.ApplicationsController.fetch(id: Long)
GET     /applications/:id/jobs         rearview.controller.ApplicationsController.listJobs(id: Long)
GET     /applications/:id/errors       rearview.controller.ApplicationsController.listErrors(id: Long)
POST    /applications                  rearview.controller.ApplicationsController.create()
PUT     /applications/:id              rearview.controller.ApplicationsController.update(id: Long)
DELETE  /applications/:id              rearview.controller.ApplicationsController.delete(id: Long)

# Job related routes
GET     /jobs                          rearview.controller.JobsController.list
GET     /jobs/:id                      rearview.controller.JobsController.fetch(id: Long)
GET     /jobs/:id/data                 rearview.controller.JobsController.fetchData(id: Long)
GET     /jobs/:id/errors               rearview.controller.JobsController.listErrors(id: Long)
POST    /jobs                          rearview.controller.JobsController.create()
PUT     /jobs/:id                      rearview.controller.JobsController.update(id: Long, appId: Long = -1)
PUT     /applications/:appId/jobs/:id  rearview.controller.JobsController.update(id: Long, appId: Long)
DELETE  /jobs/:id                      rearview.controller.JobsController.delete(id: Long, appId: Long = -1)
DELETE  /applications/:appId/jobs/:id  rearview.controller.JobsController.delete(id: Long, appId: Long)


# utility
GET     /currentTime                   rearview.controller.MainController.currentTime

# Map static resources from the /public folder to the /assets or /public URL path
GET     /assets/*file                  controllers.Assets.at(path="/public", file)
GET     /public/*file                  controllers.Assets.at(path="/public", file)

# Routes for the monitor templates
GET     /*file                          controllers.Assets.at(path="/public2", file)
